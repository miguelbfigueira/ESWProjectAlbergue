// <auto-generated />
using System;
using ESWProjectAlbergue.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ESWProjectAlbergue.Migrations
{
    [DbContext(typeof(ESWProjectAlbergueContext))]
    [Migration("20190206214739_BreedSeedData")]
    partial class BreedSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ESWProjectAlbergue.Models.AdoptionFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalId");

                    b.Property<string>("ApplicationUserId");

                    b.Property<DateTime>("Date");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("AdoptionFile");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.AdoptionForm", b =>
                {
                    b.Property<int>("AdoptionFormId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Accepted");

                    b.Property<int>("AnimalId");

                    b.Property<string>("AnimalTravel");

                    b.Property<string>("AnimalTypes");

                    b.Property<string>("ApplicationUserId");

                    b.Property<int>("Cc");

                    b.Property<bool>("Conscious");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("FinanciallyStable");

                    b.Property<int>("HouseType");

                    b.Property<string>("HowMany");

                    b.Property<string>("Job");

                    b.Property<int>("LeaveHouse");

                    b.Property<bool>("MoreAnimals");

                    b.Property<int>("NumberOfBedrooms");

                    b.Property<int>("NumberOfPeople");

                    b.HasKey("AdoptionFormId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("AdoptionForm");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Adopted");

                    b.Property<int>("AgeType");

                    b.Property<int>("AnimalType");

                    b.Property<int>("BehaviorType");

                    b.Property<DateTime>("BirthDate");

                    b.Property<int>("BreedId");

                    b.Property<string>("Description");

                    b.Property<int>("FurType");

                    b.Property<int>("Gender");

                    b.Property<string>("Name");

                    b.Property<byte[]>("Photo");

                    b.Property<int>("SizeType");

                    b.HasKey("Id");

                    b.HasIndex("BreedId");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.AnimalBreed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Behavior");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AnimalBreed");

                    b.HasData(
                        new { Id = 1, Behavior = 1, Name = "Indefinida" },
                        new { Id = 2, Behavior = 2, Name = "Beagle" },
                        new { Id = 3, Behavior = 0, Name = "Husky" },
                        new { Id = 4, Behavior = 4, Name = "Labrador" }
                    );
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("Postalcode");

                    b.Property<string>("Role");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.PosConditionsForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdoptionFileId");

                    b.Property<bool>("Answer1");

                    b.Property<bool>("Answer2");

                    b.Property<bool>("Answer3");

                    b.Property<bool>("result");

                    b.HasKey("Id");

                    b.HasIndex("AdoptionFileId");

                    b.ToTable("PosConditionsForm");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.Reminder", b =>
                {
                    b.Property<int>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime>("DateEnd");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDone");

                    b.Property<bool>("IsEvent");

                    b.Property<string>("Title");

                    b.Property<string>("UserCreater");

                    b.Property<string>("UserCreaterIdId");

                    b.Property<string>("UserReminder");

                    b.Property<string>("UserReminderIdId");

                    b.HasKey("ReminderId");

                    b.HasIndex("UserCreaterIdId");

                    b.HasIndex("UserReminderIdId");

                    b.ToTable("Reminder");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.Visit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("UserToVisitId");

                    b.HasKey("VisitId");

                    b.HasIndex("UserToVisitId");

                    b.ToTable("Visit");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.AdoptionFile", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.AdoptionForm", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.Animal", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.AnimalBreed", "Breed")
                        .WithMany()
                        .HasForeignKey("BreedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.PosConditionsForm", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.AdoptionFile", "AdoptionFile")
                        .WithMany()
                        .HasForeignKey("AdoptionFileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.Reminder", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser", "UserCreaterId")
                        .WithMany()
                        .HasForeignKey("UserCreaterIdId");

                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser", "UserReminderId")
                        .WithMany()
                        .HasForeignKey("UserReminderIdId");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.Visit", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser", "UserToVisit")
                        .WithMany()
                        .HasForeignKey("UserToVisitId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
