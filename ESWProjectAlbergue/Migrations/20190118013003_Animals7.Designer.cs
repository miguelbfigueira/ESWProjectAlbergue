// <auto-generated />
using System;
using ESWProjectAlbergue.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ESWProjectAlbergue.Migrations
{
    [DbContext(typeof(ESWProjectAlbergueContext))]
    [Migration("20190118013003_Animals7")]
    partial class Animals7
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ESWProjectAlbergue.Models.AAgeType", b =>
                {
                    b.Property<int>("AAgeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .IsRequired();

                    b.HasKey("AAgeTypeId");

                    b.ToTable("AAgeType");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.ABehaviorType", b =>
                {
                    b.Property<int>("ABehaviorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .IsRequired();

                    b.HasKey("ABehaviorTypeId");

                    b.ToTable("ABehaviorType");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.ABreed", b =>
                {
                    b.Property<int>("ABreedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .IsRequired();

                    b.HasKey("ABreedId");

                    b.ToTable("ABreed");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.AFurType", b =>
                {
                    b.Property<int>("AFurTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .IsRequired();

                    b.HasKey("AFurTypeId");

                    b.ToTable("AFurType");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.AGender", b =>
                {
                    b.Property<int>("AGenderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .IsRequired();

                    b.HasKey("AGenderId");

                    b.ToTable("AGender");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Address");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("Postalcode");

                    b.Property<string>("Role");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.ASize", b =>
                {
                    b.Property<int>("ASizeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .IsRequired();

                    b.HasKey("ASizeId");

                    b.ToTable("ASize");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.AType", b =>
                {
                    b.Property<int>("ATypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designacao")
                        .IsRequired();

                    b.HasKey("ATypeId");

                    b.ToTable("AType");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.MainAnimal", b =>
                {
                    b.Property<int>("MainAnimalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Adopted");

                    b.Property<int>("AnimalAgeTypeId");

                    b.Property<int>("AnimalBehaviorTypeId");

                    b.Property<int>("AnimalBreedId");

                    b.Property<int>("AnimalFurTypeId");

                    b.Property<int>("AnimalSizeId");

                    b.Property<int>("AnimalTypeId");

                    b.Property<int>("ApplicationUserId");

                    b.Property<string>("ApplicationUserId1");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Description");

                    b.Property<int>("GenderTypeId");

                    b.Property<string>("Name");

                    b.HasKey("MainAnimalId");

                    b.HasIndex("AnimalAgeTypeId");

                    b.HasIndex("AnimalBehaviorTypeId");

                    b.HasIndex("AnimalBreedId");

                    b.HasIndex("AnimalFurTypeId");

                    b.HasIndex("AnimalSizeId");

                    b.HasIndex("AnimalTypeId");

                    b.HasIndex("ApplicationUserId1");

                    b.HasIndex("GenderTypeId");

                    b.ToTable("MainAnimal");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.Reminder", b =>
                {
                    b.Property<int>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreate");

                    b.Property<DateTime>("DateEnd");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDone");

                    b.Property<bool>("IsEvent");

                    b.Property<string>("Title");

                    b.Property<string>("UserCreater");

                    b.Property<string>("UserCreaterIdId");

                    b.Property<string>("UserReminder");

                    b.Property<string>("UserReminderIdId");

                    b.HasKey("ReminderId");

                    b.HasIndex("UserCreaterIdId");

                    b.HasIndex("UserReminderIdId");

                    b.ToTable("Reminder");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.test", b =>
                {
                    b.Property<int>("testId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description");

                    b.HasKey("testId");

                    b.ToTable("test");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.MainAnimal", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.AAgeType", "AnimalAgeType")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalAgeTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESWProjectAlbergue.Models.ABehaviorType", "AnimalBehaviorType")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalBehaviorTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESWProjectAlbergue.Models.ABreed", "AnimalBreed")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalBreedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESWProjectAlbergue.Models.AFurType", "AnimalFurType")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalFurTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESWProjectAlbergue.Models.ASize", "AnimalSize")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalSizeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESWProjectAlbergue.Models.AType", "AnimalType")
                        .WithMany("Animals")
                        .HasForeignKey("AnimalTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId1");

                    b.HasOne("ESWProjectAlbergue.Models.AGender", "GenderType")
                        .WithMany("Animals")
                        .HasForeignKey("GenderTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ESWProjectAlbergue.Models.Reminder", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser", "UserCreaterId")
                        .WithMany()
                        .HasForeignKey("UserCreaterIdId");

                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser", "UserReminderId")
                        .WithMany()
                        .HasForeignKey("UserReminderIdId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ESWProjectAlbergue.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
