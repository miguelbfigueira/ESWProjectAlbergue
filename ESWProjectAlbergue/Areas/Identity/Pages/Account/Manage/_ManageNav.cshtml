@inject SignInManager<Models.ApplicationUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index">Perfil</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">Alterar Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins">External logins</a></li>
    }
    <!-- <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
     <li class="@ManageNavPages.PersonalDataNavClass(ViewContext)"><a asp-page="./PersonalData">Personal data</a></li>-->
    @if (User.IsInRole("admins"))
    {
        <li class="@ManageNavPages.AllUsersNavClass(ViewContext)"><a asp-page="./AllUsers">Todos Utilizadores</a></li>
        <li class="" ><a asp-area="" asp-controller="Home" asp-action="Dashboard"><img class="logo" src="~/images/graph.png" style="height:20px; width:20px;" />&nbsp Estatísticas</a></li>
    }
</ul>
